{"version":3,"sources":["layout/PageNotFound.js","layout/EmptyContent.js","layout/TopNav.js","layout/HowToPage.js","layout/Page.js","App.js","reportWebVitals.js","index.js"],"names":["PageNotFound","EmptyContent","Header","Layout","TopNav","theme","mode","Item","to","HowToPage","props","state","href","content","fetch","this","then","response","text","data","setState","catch","error","console","source","React","Component","Content","Footer","Page","className","style","padding","path","exact","component","textAlign","App","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAIeA,EAJM,kBACjB,uCCGWC,EAJM,kBACjB,sD,SCEIC,EAAWC,IAAXD,OAiBOE,EAfA,kBACb,cAACF,EAAD,UACE,eAAC,IAAD,CAAMG,MAAM,OAAOC,KAAK,aAAxB,UACE,cAAC,IAAKC,KAAN,UACE,cAAC,IAAD,CAASC,GAAG,IAAZ,mBADa,KAGf,cAAC,IAAKD,KAAN,UACE,cAAC,IAAD,CAASC,GAAG,QAAZ,mBADa,KAIf,cAAC,IAAKD,KAAN,kBAAe,W,sDCeNE,E,kDAzBb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,KAAM,2HACNC,QAAS,MAJM,E,gEAQE,IAAD,OAClBC,MAAMC,KAAKJ,MAAMC,MACdI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAAEP,QAASM,OACtCE,OAAM,SAAAC,GACL,EAAKF,SAAS,CAAEP,QAAS,4BACzBU,QAAQD,MAAMA,Q,+BAKlB,OACE,cAAC,IAAD,CAAeE,OAAQT,KAAKJ,MAAME,c,GAtBhBY,IAAMC,WCItBC,EAAoBxB,IAApBwB,QAASC,EAAWzB,IAAXyB,OAgBFC,EAdF,kBACX,eAAC,IAAD,CAAQC,UAAU,SAAlB,UACE,cAAC,EAAD,IACA,cAACH,EAAD,CAASI,MAAO,CAAEC,QAAS,UAA3B,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWlC,IACjC,cAAC,IAAD,CAAOgC,KAAK,QAAQC,OAAK,EAACC,UAAW1B,IACrC,cAAC,IAAD,CAAO0B,UAAWnC,SAGtB,cAAC4B,EAAD,CAAQG,MAAO,CAAEK,UAAW,UAA5B,gFCLWC,MARf,WACE,OACE,cAAC,IAAD,CAAYC,SAAS,IAArB,SACE,cAAC,EAAD,OCGSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.897a4ff8.chunk.js","sourcesContent":["const PageNotFound = () => (\n    <div>404</div>\n)\n\nexport default PageNotFound;\n","const EmptyContent = () => (\n    <p>Nothing to see here.</p>\n);\n\nexport default EmptyContent;\n","import { Layout, Menu } from 'antd';\nimport { NavLink } from 'react-router-dom';\n\nconst { Header } = Layout;\n\nconst TopNav = () => (\n  <Header>\n    <Menu theme=\"dark\" mode=\"horizontal\">\n      <Menu.Item key=\"1\">\n        <NavLink to=\"/\">Draw</NavLink>\n      </Menu.Item>\n      <Menu.Item key=\"2\">\n        <NavLink to=\"/help\">Help</NavLink>\n      </Menu.Item>\n      {/* (More tp include link to License, Github) */}\n      <Menu.Item key=\"3\">More</Menu.Item>\n    </Menu>\n  </Header>\n)\n\nexport default TopNav;\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\n\nclass HowToPage extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      href: \"https://raw.githubusercontent.com/ChildrensMedicalResearchInstitute/ptm-visquant/redesign/docs/how_to_drawing_options.md\",\n      content: null,\n    };\n  }\n  lkj\n  componentDidMount() {\n    fetch(this.state.href)\n      .then(response => response.text())\n      .then(data => this.setState({ content: data }))\n      .catch(error => {\n        this.setState({ content: \"Unable to load content.\" })\n        console.error(error);\n      });\n  }\n\n  render() {\n    return (\n      <ReactMarkdown source={this.state.content} />\n    );\n  }\n}\n\nexport default HowToPage;\n","import { Layout } from 'antd';\nimport { Route, Switch } from 'react-router-dom';\nimport PageNotFound from './PageNotFound';\nimport EmptyContent from './EmptyContent';\nimport TopNav from './TopNav';\nimport HowToPage from './HowToPage';\n\nconst { Content, Footer } = Layout;\n\nconst Page = () => (\n  <Layout className=\"layout\">\n    <TopNav></TopNav>\n    <Content style={{ padding: '0 50px' }}>\n      <Switch>\n        <Route path=\"/\" exact component={EmptyContent} />\n        <Route path=\"/help\" exact component={HowToPage} />\n        <Route component={PageNotFound} />\n      </Switch>\n    </Content>\n    <Footer style={{ textAlign: 'center' }}>Copyright © 2019 Children’s Medical Research Institute</Footer>\n  </Layout>\n);\n\nexport default Page;\n","import './App.css';\n\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Page from './layout/Page';\n\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/\">\n      <Page></Page>\n    </HashRouter >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}