{"version":3,"sources":["common/ComponentStatus.js","content/HttpResult.js","content/ContentFromMarkdown.js","content/HelpPage.js","content/UnderConstruction.js","graphics/Protein.js","graphics/Frame.js","visquant/ProteinSelect.js","visquant/Mapper.js","layout/TopNav.js","layout/Page.js","App.js","reportWebVitals.js","index.js"],"names":["ComponentStatus","PENDING","REJECTED","RESOLVED","PageNotFound","status","title","subTitle","extra","to","type","ServerError","onClick","location","reload","ContentFromMarkdown","props","React","useState","setHttpResponseCode","setStatus","content","setContent","useEffect","fetch","href","then","response","text","data","catch","active","source","HelpPage","subpage","match","params","resourceFile","resourcePath","UnderConstruction","message","description","icon","BuildOutlined","showIcon","DrawOptions","Protein","ref","createRef","svg","d3","current","append","attr","scale","graphics","length","drawBackbone","selectAll","regions","filter","d","display","enter","region","start","end","style","colour","drawRegions","motifs","motif","drawMotifs","Frame","setGraphics","proteinId","id","json","console","assert","error","margin","overflow","metadata","identifier","color","accession","justifyContent","getFrameContent","ProteinSelect","mode","width","onChange","allowClear","autoFocus","tokenSeparators","placeholder","defaultValue","scaleOptions","withRouter","proteinsFromQueryString","qs","parse","search","ignoreQueryPrefix","proteins","setProteins","domain","range","selectedProteinsChanged","selectedProteins","history","push","stringify","map","Header","Layout","MenuKey","TopNav","selectedKeys","setSelectedKeys","theme","e","key","Item","PushpinOutlined","QuestionCircleOutlined","CopyrightOutlined","GithubOutlined","target","rel","Content","Footer","Page","className","minHeight","path","exact","component","Mapper","textAlign","App","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d1090a0.chunk.js","sourcesContent":["const ComponentStatus = {\n  PENDING: \"pending\",\n  REJECTED: \"rejected\",\n  RESOLVED: \"resolved\",\n};\n\nexport default ComponentStatus;\n","import { Button, Result } from \"antd\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst PageNotFound = () => (\n  <Result\n    status=\"404\"\n    title=\"404\"\n    subTitle=\"Sorry, the page you visited doesn't exist.\"\n    extra={\n      <Link to=\"/\">\n        <Button type=\"default\">Back Home</Button>\n      </Link>\n    }\n  />\n);\n\nconst ServerError = () => (\n  <Result\n    status=\"500\"\n    title=\"Blip in the network\"\n    subTitle=\"Something went wrong. Please try again later.\"\n    extra={\n      <Button type=\"default\" key=\"home\" onClick={() => location.reload()}>\n        Refresh\n      </Button>\n    }\n  />\n);\n\nexport { PageNotFound, ServerError };\n","import ComponentStatus from \"../common/ComponentStatus\";\nimport { PageNotFound, ServerError } from \"./HttpResult\";\nimport { Skeleton } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst { PENDING, RESOLVED, REJECTED } = ComponentStatus;\n\nconst ContentFromMarkdown = (props) => {\n  const [httpResponseCode, setHttpResponseCode] = React.useState(null);\n  const [status, setStatus] = React.useState(PENDING);\n  const [content, setContent] = React.useState(null);\n\n  React.useEffect(() => {\n    setStatus(PENDING);\n    fetchContent();\n  }, [props.href]);\n\n  function fetchContent() {\n    fetch(props.href)\n      .then((response) => {\n        setHttpResponseCode(response.status);\n        return response.text();\n      })\n      .then((data) => {\n        setStatus(RESOLVED);\n        setContent(data);\n      })\n      .catch(() => {\n        setStatus(REJECTED);\n        setContent(null);\n      });\n  }\n\n  switch (status) {\n    case PENDING:\n      return <Skeleton active />;\n    case RESOLVED:\n      if (httpResponseCode === 404) {\n        <PageNotFound />;\n      }\n      return <ReactMarkdown source={content} />;\n    case REJECTED:\n      return <ServerError />;\n  }\n};\n\nContentFromMarkdown.propTypes = {\n  href: PropTypes.string,\n};\n\nexport default ContentFromMarkdown;\n","import ContentFromMarkdown from \"../content/ContentFromMarkdown\";\nimport { PropTypes } from \"prop-types\";\nimport React from \"react\";\n\nconst HelpPage = ({ match }) => {\n  const { subpage } = match.params;\n  const resourceFile = `how-to${subpage ? \"-\" + subpage : \"\"}.md`;\n  const resourcePath = `https://raw.githubusercontent.com/ChildrensMedicalResearchInstitute/ptm-visquant/master/docs/${resourceFile}`;\n  return <ContentFromMarkdown href={resourcePath} />;\n};\n\nHelpPage.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      subpage: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default HelpPage;\n","import { BuildOutlined } from \"@ant-design/icons\";\nimport { Alert } from \"antd\";\nimport React from \"react\";\n\nconst UnderConstruction = () => (\n  <Alert\n    message=\"Under construction\"\n    description={\n      <p>\n        This new PTM Visquant app is under construction and currently lacks some\n        of the existing features in the current prototype. Please check out{\" \"}\n        <a href=\"https://visquant.cmri.org.au/\">visquant.cmri.org.au</a> if this\n        app is currently missing the feature you need.\n      </p>\n    }\n    type=\"warning\"\n    icon={<BuildOutlined />}\n    showIcon\n  />\n);\nexport default UnderConstruction;\n","import * as d3 from \"d3\";\nimport { PropTypes } from \"prop-types\";\nimport React from \"react\";\n\nconst DrawOptions = {\n  backboneHeight: 10,\n  backboneFill: \"grey\",\n  backboneY: 30,\n\n  regionHeight: 20,\n  regionRectRadius: 5,\n  regionOpacity: 0.9,\n\n  motifHeight: 20,\n  motifOpacity: 0.5,\n};\n\nconst Protein = (props) => {\n  const ref = React.createRef();\n\n  React.useEffect(render, []);\n\n  function drawBackbone(svg) {\n    svg\n      .append(\"rect\")\n      .attr(\"x\", 0)\n      .attr(\"y\", DrawOptions.backboneY - DrawOptions.backboneHeight / 2)\n      .attr(\"height\", DrawOptions.backboneHeight)\n      .attr(\"width\", props.scale(props.graphics.length))\n      .attr(\"fill\", DrawOptions.backboneFill);\n  }\n\n  function drawRegions(svg) {\n    const regions = svg\n      .selectAll(\"region\")\n      .data(props.graphics.regions.filter((d) => d.display !== false))\n      .enter()\n      .append(\"g\");\n\n    regions\n      .append(\"rect\")\n      .attr(\"rx\", DrawOptions.regionRectRadius)\n      .attr(\"ry\", DrawOptions.regionRectRadius)\n      .attr(\"x\", (region) => props.scale(region.start))\n      .attr(\"y\", DrawOptions.backboneY - DrawOptions.regionHeight / 2)\n      .attr(\"width\", (region) => props.scale(region.end - region.start))\n      .attr(\"height\", DrawOptions.regionHeight)\n      .style(\"fill\", (region) => region.colour)\n      .style(\"fill-opacity\", DrawOptions.regionOpacity)\n      .style(\"stroke\", \"black\");\n  }\n\n  function drawMotifs(svg) {\n    svg\n      .selectAll(\"motif\")\n      .data(props.graphics.motifs.filter((d) => d.display !== false))\n      .enter()\n      .append(\"rect\")\n      .attr(\"x\", (motif) => props.scale(motif.start))\n      .attr(\"y\", () => DrawOptions.backboneY - DrawOptions.motifHeight / 2)\n      .attr(\"width\", (motif) => props.scale(motif.end - motif.start))\n      .attr(\"height\", DrawOptions.motifHeight)\n      .style(\"fill\", (motif) => motif.colour)\n      .style(\"fill-opacity\", DrawOptions.motifOpacity);\n  }\n\n  function render() {\n    const svg = d3.select(ref.current);\n    drawBackbone(svg);\n    drawRegions(svg);\n    drawMotifs(svg);\n  }\n\n  return <svg ref={ref} />;\n};\n\nProtein.propTypes = {\n  graphics: PropTypes.shape({\n    length: PropTypes.number,\n    regions: PropTypes.arrayOf(PropTypes.object),\n    markups: PropTypes.arrayOf(PropTypes.object),\n    metadata: PropTypes.shape({\n      identifier: PropTypes.string,\n    }),\n    motifs: PropTypes.arrayOf(\n      PropTypes.shape({\n        colour: PropTypes.string,\n        type: PropTypes.string,\n        start: PropTypes.number,\n        end: PropTypes.number,\n      })\n    ),\n  }).isRequired,\n  scale: PropTypes.any.isRequired,\n};\n\nexport default Protein;\n","import ComponentStatus from \"../common/ComponentStatus\";\nimport Protein from \"./Protein\";\nimport { Alert, Spin } from \"antd\";\nimport { PropTypes } from \"prop-types\";\nimport React from \"react\";\n\nconst { PENDING, RESOLVED, REJECTED } = ComponentStatus;\n\nconst Frame = (props) => {\n  const [graphics, setGraphics] = React.useState(null);\n  const [status, setStatus] = React.useState(PENDING);\n\n  React.useEffect(() => fetchGraphics(props.id), [props.id]);\n\n  function fetchGraphics(proteinId) {\n    fetch(`https://pfam.xfam.org/protein/${proteinId}/graphic`)\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        console.assert(data.length === 1, {\n          data: data,\n          error: \"Unexpected response from Pfam\",\n        });\n        setGraphics(data[0]);\n        setStatus(RESOLVED);\n      })\n      .catch(() => {\n        setGraphics(null);\n        setStatus(REJECTED);\n      });\n  }\n\n  function getFrameContent() {\n    switch (status) {\n      case PENDING:\n        return <Spin style={{ display: \"flex\", justifyContent: \"center\" }} />;\n      case RESOLVED:\n        return <Protein graphics={graphics} scale={props.scale} />;\n      case REJECTED:\n        return (\n          <Alert\n            message={`Could not find protein \"${props.id}\"`}\n            type=\"error\"\n            showIcon\n          />\n        );\n    }\n  }\n\n  return (\n    <div style={{ margin: \"20px 0\", overflow: \"visible\" }}>\n      <div>\n        {graphics ? graphics.metadata.identifier : \"\"}\n      </div>\n      <div style={{ color: \"grey\" }}>\n        {graphics ? graphics.metadata.accession : \"\"}\n      </div>\n      <div>\n        {getFrameContent()}\n      </div>\n    </div>\n  );\n};\n\nFrame.propTypes = {\n  id: PropTypes.string.isRequired,\n  scale: PropTypes.any,\n};\n\nexport default Frame;\n","import { Select } from \"antd\";\nimport { PropTypes } from \"prop-types\";\nimport React from \"react\";\n\nconst ProteinSelect = (props) => {\n  return (\n    <Select\n      mode=\"tags\"\n      style={{ width: \"100%\" }}\n      onChange={props.onChange}\n      allowClear={true}\n      autoFocus={true}\n      tokenSeparators={[\",\"]}\n      placeholder=\"Protein entry name or accession\"\n      defaultValue={props.defaultValue}\n    />\n  );\n};\n\nProteinSelect.propTypes = {\n  onChange: PropTypes.func,\n  defaultValue: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default ProteinSelect;\n","import UnderConstruction from \"../content/UnderConstruction\";\nimport Frame from \"../graphics/Frame\";\nimport ProteinSelect from \"./ProteinSelect\";\nimport { Card, Empty } from \"antd\";\nimport * as d3 from \"d3\";\nimport { PropTypes } from \"prop-types\";\nimport qs from \"qs\";\nimport React, { useEffect } from \"react\";\nimport { withRouter } from \"react-router\";\n\nconst scaleOptions = {\n  domain: [0, 4_000],\n  range: [0, 2_000],\n};\n\nconst Mapper = (props) => {\n  const proteinsFromQueryString =\n    qs.parse(props.location.search, { ignoreQueryPrefix: true }).id ?? [];\n\n  const [proteins, setProteins] = React.useState(proteinsFromQueryString);\n  const scale = d3\n    .scaleLinear()\n    .domain(scaleOptions.domain)\n    .range(scaleOptions.range);\n\n  function selectedProteinsChanged(selectedProteins) {\n    props.history.push({\n      search: \"?\" + qs.stringify({ id: selectedProteins }),\n    });\n    setProteins(selectedProteins);\n  }\n\n  function renderResults() {\n    if (proteins.length === 0) {\n      return (\n        <Empty\n          style={{ margin: \"40px\" }}\n          description={\n            <p>\n              To get started, enter Pfam protein entry name or accession.\n              <br />\n              For example, TAU_RAT or P19332.\n            </p>\n          }\n        />\n      );\n    }\n    return proteins.map((id) => <Frame key={id} id={id} scale={scale} />);\n  }\n\n  // Render proteins from query string when component mounts\n  useEffect(() => selectedProteinsChanged(proteins), []);\n\n  return (\n    <>\n      <UnderConstruction />\n      <Card style={{ margin: \"20px 0\" }}>\n        <ProteinSelect\n          onChange={selectedProteinsChanged}\n          defaultValue={proteins}\n        />\n        {renderResults()}\n      </Card>\n    </>\n  );\n};\n\nMapper.propTypes = {\n  history: PropTypes.any.isRequired,\n  location: PropTypes.any.isRequired,\n};\n\nexport default withRouter(Mapper);\n","import {\n  CopyrightOutlined,\n  GithubOutlined,\n  PushpinOutlined,\n  QuestionCircleOutlined,\n} from \"@ant-design/icons\";\nimport { Layout, Menu } from \"antd\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst { Header } = Layout;\n\nconst MenuKey = {\n  MENU_KEY_DRAW: \"menu-key-draw\",\n  MENU_KEY_HELP: \"menu-key-help\",\n  MENU_KEY_LICENSE: \"menu-key-license\",\n  MENU_KEY_GITHUB: \"menu-key-github\",\n};\n\nconst TopNav = () => {\n  const [selectedKeys, setSelectedKeys] = React.useState([]);\n\n  function handleClick(e) {\n    if (e.key === MenuKey.MENU_KEY_GITHUB) {\n      return;\n    }\n    setSelectedKeys([e.key]);\n  }\n\n  return (\n    <Header>\n      <Menu\n        theme=\"dark\"\n        onClick={handleClick}\n        selectedKeys={selectedKeys}\n        mode=\"horizontal\"\n      >\n        <Menu.Item key={MenuKey.MENU_KEY_DRAW} icon={<PushpinOutlined />}>\n          <NavLink to=\"/\">Draw</NavLink>\n        </Menu.Item>\n        <Menu.Item\n          key={MenuKey.MENU_KEY_HELP}\n          icon={<QuestionCircleOutlined />}\n        >\n          <NavLink to=\"/how-to\">Help</NavLink>\n        </Menu.Item>\n        <Menu.Item key={MenuKey.MENU_KEY_LICENSE} icon={<CopyrightOutlined />}>\n          <NavLink to=\"/license\">License</NavLink>\n        </Menu.Item>\n        <Menu.Item key={MenuKey.MENU_KEY_GITHUB} icon={<GithubOutlined />}>\n          <a\n            href=\"https://github.com/ChildrensMedicalResearchInstitute/ptm-visquant\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            GitHub\n          </a>\n        </Menu.Item>\n      </Menu>\n    </Header>\n  );\n};\n\nexport default TopNav;\n","import ContentFromMarkdown from \"../content/ContentFromMarkdown\";\nimport HelpPage from \"../content/HelpPage\";\nimport { PageNotFound } from \"../content/HttpResult\";\nimport Mapper from \"../visquant/Mapper\";\nimport TopNav from \"./TopNav\";\nimport { Layout } from \"antd\";\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nconst { Content, Footer } = Layout;\n\nconst Page = () => (\n  <Layout className=\"layout\" style={{ minHeight: \"100vh\" }}>\n    <TopNav></TopNav>\n    <Content style={{ margin: \"50px\" }}>\n      <Switch>\n        <Route path=\"/\" exact component={Mapper} />\n        <Route path=\"/how-to/:subpage?\" component={HelpPage} />\n        <Route\n          path=\"/license\"\n          exact\n          component={() => (\n            <ContentFromMarkdown href=\"https://raw.githubusercontent.com/ChildrensMedicalResearchInstitute/ptm-visquant/master/LICENSE.md\" />\n          )}\n        />\n        <Route component={PageNotFound} />\n      </Switch>\n    </Content>\n    <Footer style={{ textAlign: \"center\" }}>\n      <p>\n        Made with ♡ by{\" \"}\n        <a\n          href=\"https://github.com/digitalpoetry\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Jonathan Du\n        </a>\n        . Copyright © 2019 Children’s Medical Research Institute.\n      </p>\n    </Footer>\n  </Layout>\n);\n\nexport default Page;\n","import \"./App.css\";\nimport Page from \"./layout/Page\";\nimport React from \"react\";\nimport { HashRouter } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/\">\n      <Page></Page>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import App from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}